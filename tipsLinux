Summary
In this chapter, you learned:
systemctl reboot and systemctl poweroff reboot and power down a system, respectively.
systemctl isolate target-name.target switches to a new target at runtime.
systemctl get-default and systemctl set-default can be used to query and set the default target.
Use rd.break on the kernel command line to interrupt the boot process before control is handed over from the initramfs. The root file system is mounted read-only under /sysroot.
The emergency target can be used to diagnose and fix file-system issues.
**********************************************************************************************************************************************************************
*** Setear password de root ***
    rd.break
    mount -o remount,rw /sysroot
    chroot /sysroot
    passwd root
    touch /.autorelabel
**********************************************************************************************************************************************************************
*** The root file system is mounted read-only under
    systemd.unit=emergency.target
    mount
    mount -o remount,rw /
    mount -a
    vim /etc/fstab  (comentar el filesystem que da problemas)
    systemctl daemon-reload
    systemctl reboot
**********************************************************************************************************************************************************************
*** Crear particiones y volumen group ***
lsblk
** Crear la partición
   parted /dev/vdb mklabel msdos
   parted /dev/vdb mkpart primary 1GiB 3GiB (en este caso porque se piden 2GiB)
   parted /dev/vdb set 1 lvm on

** Crear logical Volumen

   pvcreate /dev/vdb1
   vgcreate extra_storage /dev/vdb1
   
   lvcreate -L 1GiB -n vol_home extra_storage
   
** Montar la partición

   mkdir /home-directories
   mkfs -t xfs /dev/extra_storage/vol_home
   lsblk -o UUID /dev/extra_storage/vol_home
   echo "UUID=xxxx /home-directories  xfs defaults 0 0" >> /etc/fstab
   mount -a

***********************************************************************************************************
Ensure that the network file system called /share is persistently mounted on /local-share across reboot. 
The NFS server servera.lab.example.com exports the /share network file system. The NFS export path is servera.lab.example.com:/share.

mkdir /local-share
echo "servera.lab.example.com:/share /local-share nfs rw,sync 0 0" >> /etc/fstab
mount /local-share

**********************************************************************************************************
Create a new 512 MiB partition on the /dev/vdc disk to be used as swap space. 
This swap space must be automatically activated at boot time.

parted /dev/vdc mklabel msdos
parted /dev/vdc mkpart primary linux-swap 1MiB 513MiB

mkswap /dev/vdc1

lsblk -o UUID /dev/vdc1

echo "UUID=xxxxx swap swap defaults 0 0" >> /etc/fstab
swapon -a

********************************************************************************************************
groupadd production
for i in 1 2 3 4; do useradd -G production production$i;donde

********************************************************************************************************
Configure your system so that it uses a new directory called /run/volatile to store temporary files. 
Files in this directory should be subject to time based cleanup if they are not accessed for more than 30 seconds. 
The octal permissions for the directory must be 0700. Make sure that you use the /etc/tmpfiles.d/volatile.conf file to configure the time based cleanup for the files in /run/volatile.

echo "d /run/volatile 0700 root root 30s" >> /etc/tmpfiles.d/volatile.conf 

systemd-tmpfiles --create /etc/tmpfiles.d/volatile.conf 

*****************************************************************************************************

Create a new directory called /webcontent. Both the owner and group owner of the directory should be root. 
The group members of production should be able to read and write to this directory. 
The production1 user should only be able to read this directory. 
These permissions should apply to all new files and directories created under the /webcontent directory.

mkdir /webcontent
getfacl /webcontent

setfacl -m u:production1:rx /webcontent
setfacl -m g:production:rwx /webcontent

setfacl -m d:u:production1:rx /webcontent
setfacl -m d:g:production:rwx /webcontent

******************************************************************************************************
Generate SSH keys for the student user on serverb. Do not protect the private key with a passphrase.
ssh-keygen
ssh-copy-id student@servera
ssh student@servera

******************************************************************************************************
On servera, change the default SELinux mode to permissive
grep -v '^$' /etc/sysconfig/selinux | grep -v '^#'

******************************************************************************************************

Configure serverb to automatically mount the home directory of the production5 user when the user logs in, using the network file system /home-directories/production5.
This network file system is exported from servera.lab.example.com. 
Adjust the appropriate SELinux Boolean so that production5 can use the NFS-mounted home directory on serverb after authenticating via SSH key-based authentication. 
The production5 user's password is redhat.






